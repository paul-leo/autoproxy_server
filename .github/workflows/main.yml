# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
        branches: [master]
    pull_request:
        branches: [master]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            - name: Setup Node.js environment
              uses: actions/setup-node@v2.1.2
            - name: Install npm dependencies
              run: npm install
            - name: Run build task
              run: npm run build
            - name: Deploy to Server
              uses: focusbe/deploy-action@v2.5.3
              with:
                  deploy-type: 'rsync'
                  project-type: 'front-static'
                  username: 'rsyncwww'
                  password: 'liupeng1992'
                  ip: '47.94.88.179'
                  remote-path: 'www'
                  project-name: 'autoproxy_server'
                  args: '-av --include="dist" --include="package.json" --include="docker-compose.yml" --include="pm2.json" --include="package-lock.json" --include="Dockerfile"'
                  source-path: './'
                  exclude: '--exclude node_modules --exclude src'
            - name: Restart server
              uses: appleboy/ssh-action@master
              with:
                  host: '47.94.88.179'
                  username: 'root'
                  password: 'zuofei@1992'
                  script: |
                      cd /var/www/github/autoproxy_server
                      npm install --production
                      docker-compose down
                      docker-compose up -d
